e2eTest: &e2eTest
    machine: true
    working_directory: /home/circleci/.go_workspace/src/github.com/giantswarm/cert-exporter
    steps:
    - checkout

    - attach_workspace:
        at: .

    - run:
        name: Get e2ectl binary
        command: |
          wget -q $(curl -sS https://api.github.com/repos/giantswarm/e2ectl/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
          chmod +x ./e2ectl

    - run:
        name: Init cluster
        command: |
          ./e2ectl cluster create
          cp $(./e2ectl kubeconfig path) ${E2E_TEST_DIR}/kubeconfig

    - run:
        name: Publish chart to CNR using a temporary channel for testing
        command: ./architect publish --pipeline=false --channels=${CIRCLE_SHA1}-${E2E_TEST_NAME}

    - run:
        name: Run test
        command: |
          docker run --rm --network host \
            -v $(pwd)/${E2E_TEST_DIR}:/e2e \
            -v $(pwd):/go/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} \
            -e E2E_KUBECONFIG=/e2e/kubeconfig \
            -e CIRCLE_SHA1=${CIRCLE_SHA1} \
            -w /go/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} \
            quay.io/giantswarm/golang:1.12.6 go test -v -tags k8srequired ./${E2E_TEST_DIR}/

    - run:
        name: Finish with cleanup, no matter if the test succeeded or not
        command: |
          ./e2ectl cluster delete
          ./architect unpublish --channels=${CIRCLE_SHA1}-${E2E_TEST_NAME}
        when: always

version: 2
jobs:
  build:
    machine: true
    steps:
    - checkout

    - run:
        name: Get architect binary
        command: |
          wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
          chmod +x ./architect
          ./architect version

    - run:
        name: Publish chart to CNR using a temporary channel for feature branch deploys
        command: ./architect publish --pipeline=false --channels=wip-${CIRCLE_SHA1}

    - run: ./architect build
    - store_test_results:
        path: /tmp/results

    - persist_to_workspace:
        root: .
        paths:
        - ./architect

  e2eTestBasic:
    environment:
      E2E_TEST_DIR: "integration/test/basic"
      E2E_TEST_NAME: "basic"
    <<: *e2eTest

  deploy:
    machine: true
    steps:
    - checkout

    - attach_workspace:
        at: .

    - run: ./architect deploy

    - run:
        name: Publish to stable
        # Project specific: We deploy cert-exporter to control planes too,
        # and draughtsman requires the special version format.
        command: |
          sed -i 's/version:.*/version: 1.0.0-'"${CIRCLE_SHA1}"'/' helm/cert-exporter-chart/Chart.yaml
          ./architect publish --pipeline=false --channels=stable

workflows:
  version: 2
  build_e2e:
    jobs:
      - build

      - e2eTestBasic:
          requires:
          - build

      - deploy:
          filters:
            branches:
              only: master
          requires:
          - e2eTestBasic
