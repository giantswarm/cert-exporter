e2eTest: &e2eTest
    machine: true
    working_directory: /home/circleci/.go_workspace/src/github.com/giantswarm/cert-exporter
    steps:
    - checkout

    - attach_workspace:
        at: .

    - run:
        name: Get e2ectl binary
        command: |
          wget -q $(curl -sS https://api.github.com/repos/giantswarm/e2ectl/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
          chmod +x ./e2ectl

    - run:
        name: Init cluster
        command: |
          ./e2ectl cluster create
          cp $(./e2ectl kubeconfig path) ${E2E_TEST_DIR}/kubeconfig

    - run:
        name: Publish chart to CNR using a temporary channel for testing
        command: ./architect publish --pipeline=false --channels=${CIRCLE_SHA1}-${E2E_TEST_NAME}

    - run:
        name: Run test
        command: |
          docker run --rm --network host \
            -v $(pwd)/${E2E_TEST_DIR}:/e2e \
            -v $(pwd):/go/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} \
            -e E2E_KUBECONFIG=/e2e/kubeconfig \
            -e CIRCLE_SHA1=${CIRCLE_SHA1} \
            -w /go/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} \
            golang:1 go test -v -tags k8srequired ./${E2E_TEST_DIR}/

    - run:
        name: Export logs
        command: |
          ./e2ectl logs export --logs-dir=kind/logs
        when: always

    - store_artifacts:
        path: kind/logs
        destination: logs

    - run:
        name: Finish with cleanup, no matter if the test succeeded or not
        command: |
          ./e2ectl cluster delete
          ./architect unpublish --channels=${CIRCLE_SHA1}-${E2E_TEST_NAME}
        when: always

version: 2.1
orbs:
  architect: giantswarm/architect@0.8.14

jobs:
  e2eTestBasic:
    environment:
      E2E_TEST_DIR: "integration/test/basic"
      E2E_TEST_NAME: "basic"
    <<: *e2eTest

workflows:
  build_e2e:
    jobs:
      - architect/go-build:
          name: build
          binary: cert-exporter
          filters:
            tags:
              only: /^v.*/

      - architect/push-to-docker:
          name: push-cert-exporter-to-quay
          image: "quay.io/giantswarm/cert-exporter"
          username_envar: "QUAY_USERNAME"
          password_envar: "QUAY_PASSWORD"
          requires:
            - build
          # Needed to trigger job also on git tag.
          filters:
            tags:
              only: /^v.*/

      - architect/push-to-docker:
          name: push-cert-exporter-to-aliyun
          image: "registry-intl.cn-shanghai.aliyuncs.com/giantswarm/cert-exporter"
          username_envar: "ALIYUN_USERNAME"
          password_envar: "ALIYUN_PASSWORD"
          requires:
            - build
          # Needed to trigger job only on git tag.
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/

      - architect/push-to-app-catalog:
          name: push-cert-exporter-to-app-catalog
          app_catalog: "default-catalog"
          app_catalog_test: "default-test-catalog"
          chart: "cert-exporter"
          requires:
            - push-cert-exporter-to-quay
          # Needed to trigger job also on git tag.
          filters:
            tags:
              only: /^v.*/

      - e2eTestBasic:
          requires:
          - build

      - hold-push-cert-exporter-to-aliyun-pr:
          type: approval
          requires:
            - build
          # Needed to prevent job from being triggered on master branch.
          filters:
            branches:
              ignore: master

      - architect/push-to-docker-legacy:
          name: push-cert-exporter-to-aliyun-pr
          image: "registry-intl.cn-shanghai.aliyuncs.com/giantswarm/cert-exporter"
          username_envar: "ALIYUN_USERNAME"
          password_envar: "ALIYUN_PASSWORD"
          # Push to Aliyun should execute for non-master branches only once manually approved.
          requires:
            - hold-push-cert-exporter-to-aliyun-pr
          # Needed to prevent job being triggered for master branch.
          filters:
            branches:
              ignore: master

      # Push to Aliyun should execute without manual approval on master.
      - architect/push-to-docker-legacy:
          name: push-cert-exporter-to-aliyun-master
          image: "registry-intl.cn-shanghai.aliyuncs.com/giantswarm/cert-exporter"
          username_envar: "ALIYUN_USERNAME"
          password_envar: "ALIYUN_PASSWORD"
          requires:
            - build
          # Needed to trigger job only on merge to master.
          filters:
            branches:
              only: master

      - deploy:
          filters:
            branches:
              only: master
          requires:
          - e2eTestBasic
          - push-cert-exporter-to-aliyun-master
